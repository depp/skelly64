package(default_visibility = ["//visibility:public"])

load("@rules_cc//cc:defs.bzl", "cc_library", "cc_test")
load("//base:copts.bzl", "COPTS")

cc_library(
    name = "defs",
    hdrs = [
        "defs.h",
    ],
    copts = COPTS,
)

cc_library(
    name = "random",
    srcs = [
        "random.c",
    ],
    hdrs = [
        "random.h",
    ],
    copts = COPTS,
)

cc_library(
    name = "base",
    srcs = [
        "console.c",
        "console_global.c",
        "console_internal.h",
        "fatal.c",
        "float.c",
        "vec2.c",
    ] + select({
        "//n64:os": [
            "console_n64.c",
            "fatal_n64.c",
            "memcmp.c",
            "memcpy.c",
            "memmove.c",
            "memory_n64.c",
            "memset.c",
            "strlen.c",
        ],
        "//conditions:default": [
            "fatal_pc.c",
            "memory_pc.c",
        ],
    }),
    hdrs = [
        "base.h",
        "console.h",
        "float.h",
        "vec2.h",
        "vectypes.h",
    ] + select({
        "//n64:os": [
            "console_n64.h",
        ],
        "//conditions:default": [],
    }),
    copts = COPTS,
    deps = [
        ":defs",
        "//assets/fonts/terminus:ter-u12n",
    ] + select({
        "//n64:os": ["//n64:libultra"],
        "//conditions:default": [],
    }),
)

cc_library(
    name = "scheduler",
    srcs = [
        "scheduler.c",
    ],
    hdrs = [
        "scheduler.h",
    ],
    copts = COPTS,
    deps = [
        ":base",
    ],
)

cc_library(
    name = "tool",
    srcs = [
        "die.c",
        "pack32.c",
        "swap16.c",
        "swap16arr.c",
        "swap32.c",
        "xmalloc.c",
    ],
    hdrs = [
        "tool.h",
    ],
    copts = COPTS,
    deps = [":defs"],
)

cc_test(
    name = "console_test",
    size = "small",
    srcs = [
        "console_internal.h",
        "console_test.c",
    ],
    copts = COPTS,
    visibility = ["//visibility:private"],
    deps = [
        ":base",
        "//base/testlib",
    ],
)
